"""
Django settings for genevieve_client project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

import os

import dj_database_url
from django.conf import global_settings
import django_heroku

from .utils import to_bool

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Check if running on Heroku. If so, force SSL.
ON_HEROKU = os.getenv('ON_HEROKU', 'false').lower() == 'true'
if ON_HEROKU:
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True


# Development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = to_bool('DEBUG', 'false')
ALLOWED_HOSTS = []
CSRF_COOKIE_SECURE = True

# SECRETCODE code.
SECRETCODE = os.getenv('SECRETCODE')

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Required by django-allauth
    'django.contrib.sites',

    # Main app for the site.
    'genevieve_client',

    # Third party apps
    'allauth',
    'allauth.account',
)


AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin
    'django.contrib.auth.backends.ModelBackend',

    # 'allauth' specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',

    # custom backend to enable login via GenNotes account
    'genevieve_client.auth_backends.AuthenticationBackend',
] + global_settings.AUTHENTICATION_BACKENDS


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'genevieve_client.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'genevieve_client.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

# Use DATABASE_URL to do database setup, for a local Postgres database it would
# look like: postgres://localhost/database_name
DATABASES = {}
DATABASES['default'] = dj_database_url.config(conn_max_age=500)

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

SITE_ID = 1


# Email set up.
EMAIL_BACKEND = os.getenv('EMAIL_BACKEND', global_settings.EMAIL_BACKEND)
EMAIL_USE_TLS = to_bool('EMAIL_USE_TLS', str(global_settings.EMAIL_USE_TLS))
EMAIL_HOST = os.getenv('EMAIL_HOST', global_settings.EMAIL_HOST)
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', global_settings.EMAIL_HOST_USER)
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD',
                                global_settings.EMAIL_HOST_PASSWORD)
EMAIL_PORT = int(os.getenv('EMAIL_PORT', str(global_settings.EMAIL_PORT)))

# Where to locally store files
LOCAL_STORAGE_ROOT = os.path.join(BASE_DIR, 'files/')
# Where to store uploaded files
MEDIA_ROOT = os.path.join(LOCAL_STORAGE_ROOT, 'upload/')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'static-files')
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

# Settings for django-allauth and account interactions.
# Signup and login take both email and username.
# No email confirmation is implemented.
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_VERIFICATION = 'optional'

LOGIN_REDIRECT_URL = 'home'

# GenNotes client ID and secret.
GENNOTES_CLIENT_ID = os.getenv('GENNOTES_CLIENT_ID')
GENNOTES_CLIENT_SECRET = os.getenv('GENNOTES_CLIENT_SECRET')
GENNOTES_REDIRECT_URI = os.getenv('GENNOTES_REDIRECT_URI')
GENNOTES_URL = os.getenv('GENNOTES_URL',
                         'https://gennotes.herokuapp.com')

# GenNotes client ID and secret.
OPENHUMANS_CLIENT_ID = os.getenv('OPENHUMANS_CLIENT_ID')
OPENHUMANS_CLIENT_SECRET = os.getenv('OPENHUMANS_CLIENT_SECRET')
OPENHUMANS_REDIRECT_URI = os.getenv('OPENHUMANS_REDIRECT_URI')
OPENHUMANS_URL = os.getenv('OPENHUMANS_URL')

# Genevieve settings
GENEVIEVE_ADMIN_EMAIL = os.getenv('GENEVIEVE_ADMIN_EMAIL', '')

CELERY_TASK_SERIALIZER = 'json'

# Configure Django App for Heroku.
django_heroku.settings(locals(), logging=not DEBUG, databases=not DEBUG)
